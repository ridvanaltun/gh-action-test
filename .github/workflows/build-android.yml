# This is a basic workflow to help you get started with Actions

name: Android

# Controls when the workflow will run
on:
  repository_dispatch:
    types: [build-android]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
          host: bitbucket.org
          private-key: ${{ secrets.SSH_PRIVATE_KEY_BITBUCKET }}
          private-key-name: bitbucket
          
      - name: Clone Bitbucket repository
        run: git clone git@bitbucket.org:ridvanaltun/card-collection.git .
        
      - name: Set Release Keystore File
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > release.keystore.asc
          gpg -d --passphrase "${{ secrets.RELEASE_KEYSTORE_PASSPHRASE }}" --batch release.keystore.asc > android/app/release.keystore
          
      - name: Set Release Properties
        run: |
          echo "${{ secrets.RELEASE_PROPERTIES }}" > release.properties.asc
          gpg -d --passphrase "${{ secrets.RELEASE_PROPERTIES_PASSPHRASE }}" --batch release.properties.asc > android/release.properties
          
      - name: Set Environment File
        run: |
          echo "${{ secrets.ENVIRONMENT }}" > environment.asc
          gpg -d --passphrase "${{ secrets.ENVIRONMENT_PASSPHRASE }}" --batch environment.asc > .env

      # Gradle Cache https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Yarn Cache: https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - name: Bundle *.aab
        run: cd android && ./gradlew bundleRelease
        
      - name: Download bundletool
        run: curl -L https://github.com/google/bundletool/releases/download/1.8.0/bundletool-all-1.8.0.jar --output bundletool.jar
        
      #- name: Create apks from bundle file for debugging
      #  run: java -jar bundletool.jar build-apks --bundle=android/app/build/outputs/bundle/release/app-release.aab --output=app-debug.apks
        
      - name: Extract versionName & versionCode and rename output
        run: |
          echo "APP_VERSION_CODE=$(java -jar bundletool.jar dump manifest --bundle android/app/build/outputs/bundle/release/app-release.aab --xpath /manifest/@android:versionCode)" >> $GITHUB_ENV
          echo "APP_VERSION_NAME=$(java -jar bundletool.jar dump manifest --bundle android/app/build/outputs/bundle/release/app-release.aab --xpath /manifest/@android:versionName)" >> $GITHUB_ENV
          echo "OUTPUT_NAME=$(echo card-collection-v$APP_VERSION_NAME-build-$APP_VERSION_CODE)" >> $GITHUB_ENV
          mv android/app/build/outputs/bundle/release/app-release.aab android/app/build/outputs/bundle/release/$OUTPUT_NAME.aab
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.OUTPUT_NAME }}-aab
          path: android/app/build/outputs/bundle/release/${{ env.OUTPUT_NAME }}.aab
